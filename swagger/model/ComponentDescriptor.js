/**
 * Thingsboard REST API
 * For instructions how to authorize requests please visit <a href='http://thingsboard.io/docs/reference/rest-api/'>REST API documentation page</a>.
 *
 * OpenAPI spec version: 2.0
 * Contact: info@thingsboard.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ComponentDescriptorId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ComponentDescriptorId'));
  } else {
    // Browser globals (root is window)
    if (!root.ThingsboardRestApi) {
      root.ThingsboardRestApi = {};
    }
    root.ThingsboardRestApi.ComponentDescriptor = factory(root.ThingsboardRestApi.ApiClient, root.ThingsboardRestApi.ComponentDescriptorId);
  }
}(this, function(ApiClient, ComponentDescriptorId) {
  'use strict';




  /**
   * The ComponentDescriptor model module.
   * @module model/ComponentDescriptor
   * @version 2.0
   */

  /**
   * Constructs a new <code>ComponentDescriptor</code>.
   * @alias module:model/ComponentDescriptor
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>ComponentDescriptor</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ComponentDescriptor} obj Optional instance to populate.
   * @return {module:model/ComponentDescriptor} The populated <code>ComponentDescriptor</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('actions')) {
        obj['actions'] = ApiClient.convertToType(data['actions'], 'String');
      }
      if (data.hasOwnProperty('clazz')) {
        obj['clazz'] = ApiClient.convertToType(data['clazz'], 'String');
      }
      if (data.hasOwnProperty('configurationDescriptor')) {
        obj['configurationDescriptor'] = ApiClient.convertToType(data['configurationDescriptor'], 'String');
      }
      if (data.hasOwnProperty('createdTime')) {
        obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'Number');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ComponentDescriptorId.constructFromObject(data['id']);
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('scope')) {
        obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} actions
   */
  exports.prototype['actions'] = undefined;
  /**
   * @member {String} clazz
   */
  exports.prototype['clazz'] = undefined;
  /**
   * @member {String} configurationDescriptor
   */
  exports.prototype['configurationDescriptor'] = undefined;
  /**
   * @member {Number} createdTime
   */
  exports.prototype['createdTime'] = undefined;
  /**
   * @member {module:model/ComponentDescriptorId} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/ComponentDescriptor.ScopeEnum} scope
   */
  exports.prototype['scope'] = undefined;
  /**
   * @member {module:model/ComponentDescriptor.TypeEnum} type
   */
  exports.prototype['type'] = undefined;


  /**
   * Allowed values for the <code>scope</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ScopeEnum = {
    /**
     * value: "SYSTEM"
     * @const
     */
    "SYSTEM": "SYSTEM",
    /**
     * value: "TENANT"
     * @const
     */
    "TENANT": "TENANT"  };

  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "ENRICHMENT"
     * @const
     */
    "ENRICHMENT": "ENRICHMENT",
    /**
     * value: "FILTER"
     * @const
     */
    "FILTER": "FILTER",
    /**
     * value: "TRANSFORMATION"
     * @const
     */
    "TRANSFORMATION": "TRANSFORMATION",
    /**
     * value: "ACTION"
     * @const
     */
    "ACTION": "ACTION",
    /**
     * value: "EXTERNAL"
     * @const
     */
    "EXTERNAL": "EXTERNAL"  };


  return exports;
}));


