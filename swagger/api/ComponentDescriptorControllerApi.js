/**
 * Thingsboard REST API
 * For instructions how to authorize requests please visit <a href='http://thingsboard.io/docs/reference/rest-api/'>REST API documentation page</a>.
 *
 * OpenAPI spec version: 2.0
 * Contact: info@thingsboard.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ComponentDescriptor'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ComponentDescriptor'));
  } else {
    // Browser globals (root is window)
    if (!root.ThingsboardRestApi) {
      root.ThingsboardRestApi = {};
    }
    root.ThingsboardRestApi.ComponentDescriptorControllerApi = factory(root.ThingsboardRestApi.ApiClient, root.ThingsboardRestApi.ComponentDescriptor);
  }
}(this, function(ApiClient, ComponentDescriptor) {
  'use strict';

  /**
   * ComponentDescriptorController service.
   * @module api/ComponentDescriptorControllerApi
   * @version 2.0
   */

  /**
   * Constructs a new ComponentDescriptorControllerApi. 
   * @alias module:api/ComponentDescriptorControllerApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getComponentDescriptorByClazzUsingGET operation.
     * @callback module:api/ComponentDescriptorControllerApi~getComponentDescriptorByClazzUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComponentDescriptor} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getComponentDescriptorByClazz
     * @param {String} componentDescriptorClazz componentDescriptorClazz
     * @param {module:api/ComponentDescriptorControllerApi~getComponentDescriptorByClazzUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComponentDescriptor}
     */
    this.getComponentDescriptorByClazzUsingGET = function(componentDescriptorClazz, callback) {
      var postBody = null;

      // verify the required parameter 'componentDescriptorClazz' is set
      if (componentDescriptorClazz === undefined || componentDescriptorClazz === null) {
        throw new Error("Missing the required parameter 'componentDescriptorClazz' when calling getComponentDescriptorByClazzUsingGET");
      }


      var pathParams = {
        'componentDescriptorClazz': componentDescriptorClazz
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Authorization'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ComponentDescriptor;

      return this.apiClient.callApi(
        '/api/component/{componentDescriptorClazz}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getComponentDescriptorsByTypeUsingGET operation.
     * @callback module:api/ComponentDescriptorControllerApi~getComponentDescriptorsByTypeUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ComponentDescriptor>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getComponentDescriptorsByType
     * @param {String} componentType componentType
     * @param {module:api/ComponentDescriptorControllerApi~getComponentDescriptorsByTypeUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ComponentDescriptor>}
     */
    this.getComponentDescriptorsByTypeUsingGET = function(componentType, callback) {
      var postBody = null;

      // verify the required parameter 'componentType' is set
      if (componentType === undefined || componentType === null) {
        throw new Error("Missing the required parameter 'componentType' when calling getComponentDescriptorsByTypeUsingGET");
      }


      var pathParams = {
        'componentType': componentType
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Authorization'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = [ComponentDescriptor];

      return this.apiClient.callApi(
        '/api/components/{componentType}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getComponentDescriptorsByTypesUsingGET operation.
     * @callback module:api/ComponentDescriptorControllerApi~getComponentDescriptorsByTypesUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ComponentDescriptor>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getComponentDescriptorsByTypes
     * @param {String} componentTypes componentTypes
     * @param {module:api/ComponentDescriptorControllerApi~getComponentDescriptorsByTypesUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ComponentDescriptor>}
     */
    this.getComponentDescriptorsByTypesUsingGET = function(componentTypes, callback) {
      var postBody = null;

      // verify the required parameter 'componentTypes' is set
      if (componentTypes === undefined || componentTypes === null) {
        throw new Error("Missing the required parameter 'componentTypes' when calling getComponentDescriptorsByTypesUsingGET");
      }


      var pathParams = {
      };
      var queryParams = {
        'componentTypes': componentTypes,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Authorization'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = [ComponentDescriptor];

      return this.apiClient.callApi(
        '/api/components{?componentTypes}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
